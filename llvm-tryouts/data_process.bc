; ModuleID = 'data_process.c'
source_filename = "data_process.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str.1 = private unnamed_addr constant [20 x i8] c"Usage: %s <number>\0A\00", align 1
@str = private unnamed_addr constant [6 x i8] c"Done.\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @process_flag(i8* nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = alloca [28 x i8], align 16
  %3 = getelementptr inbounds [28 x i8], [28 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %3) #5
  %4 = call i64 @strtol(i8* nocapture noundef nonnull %0, i8** noundef null, i32 noundef 10) #5
  %5 = and i64 %4, 2147483648
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = add i64 %4, 1
  %9 = and i64 %8, 4294967295
  br label %12

10:                                               ; preds = %12, %1
  %11 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str, i64 0, i64 0))
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %3) #5
  ret void

12:                                               ; preds = %7, %12
  %13 = phi i64 [ 0, %7 ], [ %15, %12 ]
  %14 = getelementptr inbounds [28 x i8], [28 x i8]* %2, i64 0, i64 %13
  store volatile i8 88, i8* %14, align 1, !tbaa !3
  %15 = add nuw nsw i64 %13, 1
  %16 = icmp eq i64 %15, %9
  br i1 %16, label %10, label %12, !llvm.loop !6
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @main(i32 noundef %0, i8** nocapture noundef readonly %1) local_unnamed_addr #0 {
  %3 = alloca [28 x i8], align 16
  %4 = icmp eq i32 %0, 2
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = load i8*, i8** %1, align 8, !tbaa !9
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* noundef %6)
  br label %25

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8*, i8** %1, i64 1
  %10 = load i8*, i8** %9, align 8, !tbaa !9
  %11 = getelementptr inbounds [28 x i8], [28 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %11) #5
  %12 = call i64 @strtol(i8* nocapture noundef nonnull %10, i8** noundef null, i32 noundef 10) #5
  %13 = and i64 %12, 2147483648
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %8
  %16 = add i64 %12, 1
  %17 = and i64 %16, 4294967295
  br label %18

18:                                               ; preds = %18, %15
  %19 = phi i64 [ 0, %15 ], [ %21, %18 ]
  %20 = getelementptr inbounds [28 x i8], [28 x i8]* %3, i64 0, i64 %19
  store volatile i8 88, i8* %20, align 1, !tbaa !3
  %21 = add nuw nsw i64 %19, 1
  %22 = icmp eq i64 %21, %17
  br i1 %22, label %23, label %18, !llvm.loop !6

23:                                               ; preds = %18, %8
  %24 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str, i64 0, i64 0)) #5
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %11) #5
  br label %25

25:                                               ; preds = %23, %5
  %26 = phi i32 [ 1, %5 ], [ 0, %23 ]
  ret i32 %26
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare dso_local i64 @strtol(i8* noundef readonly, i8** nocapture noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 14.0.6 (https://github.com/llvm/llvm-project.git f28c006a5895fc0e329fe15fead81e37457cb1d1)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = distinct !{!6, !7, !8}
!7 = !{!"llvm.loop.mustprogress"}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = !{!10, !10, i64 0}
!10 = !{!"any pointer", !4, i64 0}
